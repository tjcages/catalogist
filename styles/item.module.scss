@import "./_variables";

.main {
  position: relative;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  width: clamp(300px, 30vw, 500px);
  height: clamp(300px, 30vw, 500px);

  overflow: hidden;
  white-space: nowrap;

  @media only screen and (max-width: 768px) {
    & {
      width: 100%;
    }
  }

  // Define initial and final background color values
  $r: 236;
  $g: 239;
  $b: 242;

  $r2: 136;
  $g2: 152;
  $b2: 170;

  // Calculate the color step by dividing the difference between the final and initial colors by the total number of div children
  $totalChildren: 20;
  $rStep: ($r2 - $r) / $totalChildren;
  $gStep: ($g2 - $g) / $totalChildren;
  $bStep: ($b2 - $b) / $totalChildren;

  // Loop through the div children and generate the background color for each
  @for $i from 1 through $totalChildren {
    // Calculate the background color for the current div child
    $rCurrent: $r + $rStep * $i;
    $gCurrent: $g + $gStep * $i;
    $bCurrent: $b + $bStep * $i;

    &:nth-child(#{$i}) {
      background-color: rgb($rCurrent, $gCurrent, $bCurrent);
    }
  }

  .info {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;

    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;

    background-image: radial-gradient(rgba(0, 0, 0, 0) 1px, var(--customBackground) 1px);
    background-size: 4px 4px;
    backdrop-filter: blur(3px);
    -webkit-backdrop-filter: blur(3px);
    -moz-backdrop-filter: blur(3px);
    font-size: 14px;
    line-height: 14px;

    padding: 1.25rem 0.75rem 1.25rem 1.5rem;

    .titles {
      position: relative;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      gap: 0.5rem;

      h5 {
        color: var(--customColor);
      }

      strong {
        color: var(--customBackground);
        filter: brightness(70%);
      }
    }

    .actions {
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      align-items: center;
      gap: 1rem;

      .icon {
        padding: 0.5rem;

        opacity: 0.5;

        cursor: pointer;

        transition: opacity $animation-duration $animation-easing;

        &:hover {
          opacity: 1;
        }
      }
    }
  }
}
