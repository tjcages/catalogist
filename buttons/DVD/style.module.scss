@import "@/styles/_variables";

.main {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;

  display: flex;
  align-items: center;
  justify-content: center;

  background-color: #111111;
}

.button {
  $change: false;

  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 0.5rem;
  overflow: hidden;

  animation: 40s linear bounce infinite running;

  @if $change {
    opacity: 0;
  }
}

.info {
  h5 {
    color: white;
  }
  strong {
    color: white;
  }
  img {
    filter: invert(100%);
  }
}

@keyframes bounce {
  $b: (
    x: 0,
    y: 0,
    vx: 0.25,
    vy: 0.15,
    color: 0,
  );
  $count: 56;
  @for $i from 0 through $count {
    $percent: 0% + $i / $count * 100;
    #{$percent} {
      transform: translate(
        calc(#{map-get($b, x)} * (100% - 288px)),
        calc(#{map-get($b, y)} * (90% - 44px))
      );
      // filter: hue-rotate(#{map-get($b, color)}deg)
      //   saturate(200%)
      //   brightness(125%);
    }
    0% {
      filter: hue-rotate(#{map-get($b, color)}deg)
        saturate(200%)
        brightness(125%);
    }
    $b: map-merge(
      $b,
      (
        x: max(0, min(1, map-get($b, x) + map-get($b, vx))),
        y: max(0, min(1, map-get($b, y) + map-get($b, vy))),
      )
    );
    @if map-get($b, x) >= 1 or map-get($b, x) <= 0 {
      $b: map-merge(
        $b,
        (
          vx: map-get($b, vx) * -1,
          color: map-get($b, color) + 137.5,
        )
      );
    }
    @if map-get($b, y) >= 1 or map-get($b, y) <= 0 {
      $b: map-merge(
        $b,
        (
          vy: map-get($b, vy) * -1,
          color: map-get($b, color) + 137.5,
        )
      );
    }
  }
}
